package dev.realme.ash.impl.module.exploit;

import dev.realme.ash.api.config.Config;
import dev.realme.ash.api.config.setting.BooleanConfig;
import dev.realme.ash.api.event.EventStage;
import dev.realme.ash.api.event.listener.EventListener;
import dev.realme.ash.api.module.ModuleCategory;
import dev.realme.ash.api.module.ToggleModule;
import dev.realme.ash.impl.event.TickEvent;
import dev.realme.ash.impl.event.network.PacketEvent;
import dev.realme.ash.util.math.timer.CacheTimer;
import dev.realme.ash.util.math.timer.Timer;
import net.minecraft.client.gui.screen.DownloadingTerrainScreen;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;

public class PortalGodModeModule
extends ToggleModule {
    final Config<Boolean> positionAdjustConfig = new BooleanConfig("PositionAdjust", "Adjusts position to match server portal position", true);
    private double teleportX;
    private double teleportY;
    private double teleportZ;
    private boolean cancelTeleport;
    private final Timer portalTimer = new CacheTimer();

    public PortalGodModeModule() {
        super("PortalGodMode", "Makes the player invincible while in portals", ModuleCategory.EXPLOITS);
    }

    @Override
    public void onEnable() {
        this.teleportX = 0.0;
        this.teleportY = 0.0;
        this.teleportZ = 0.0;
    }

    @EventListener
    public void onPacketInbound(PacketEvent.Receive event) {
        Packet<?> packet;
        if (PortalGodModeModule.mc.player == null) {
            return;
        }
        if (PortalGodModeModule.mc.currentScreen instanceof DownloadingTerrainScreen) {
            this.cancelTeleport = true;
            PortalGodModeModule.mc.currentScreen = null;
            this.portalTimer.reset();
        }
        if ((packet = event.getPacket()) instanceof PlayerPositionLookS2CPacket) {
            PlayerPositionLookS2CPacket packet2 = (PlayerPositionLookS2CPacket) packet;
            if (this.positionAdjustConfig.getValue() && !PortalGodModeModule.mc.player.isRiding()) {
                this.teleportX = packet2.getX();
                this.teleportY = packet2.getY();
                this.teleportZ = packet2.getZ();
                PortalGodModeModule.mc.player.setPosition(packet2.getX(), packet2.getY(), packet2.getZ());
            }
            event.cancel();
        }
    }

    @EventListener
    public void onTick(TickEvent event) {
        if (event.getStage() == EventStage.PRE && this.teleportX != 0.0 && this.teleportY != 0.0 && this.teleportZ != 0.0 && this.cancelTeleport) {
            PortalGodModeModule.mc.player.setPosition(this.teleportX, this.teleportY, this.teleportZ);
            if (this.portalTimer.passed(2500)) {
                this.cancelTeleport = false;
            }
        }
    }
}
